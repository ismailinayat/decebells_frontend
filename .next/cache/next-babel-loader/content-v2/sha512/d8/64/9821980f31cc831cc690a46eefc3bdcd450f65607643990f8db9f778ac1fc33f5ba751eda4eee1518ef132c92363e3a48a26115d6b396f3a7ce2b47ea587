{"ast":null,"code":"//import NextAuth from 'next-auth'\n//import Providers from 'next-auth/providers'\n//import axios from 'axios'\n//\n//const providers = [\n//  Providers.Credentials({\n//    name: 'Credentials',\n//    authorize: async (credentials) => {\n//      try {\n//        const user = await axios.post('http://localhost:3000/api/v1/users/login',\n//        {\n//          user: {\n//            password: credentials.password,\n//            email: credentials.email\n//          }\n//        },\n//        {\n//          headers: {\n//            accept: '*/*',\n//            'Content-Type': 'application/json'\n//          }\n//        })\n//\n//        if (user) {\n//          return {status: 'success', data: user}\n//        } \n//      } catch (e) {\n//        const errorMessage = e.response.data.message\n//        // Redirecting to the login page with error messsage          in the URL\n//        throw new Error(errorMessage + '&email=' + credentials.email)\n//      }\n//\n//    }\n//  })\n//]\n//\n//const callbacks = {\n//  async signIn(user, account, profile) {\n//    return true\n//  },\n//\n//  async jwt(token, user) {\n//    if (user) {\n//      token.accessToken = user.data.token\n//    }\n//\n//    return token\n//  },\n//\n//  async session(session, token) {\n//    session.accessToken = token.accessToken\n//    return session\n//  }\n//}\n//\n//const options = {\n//  providers,\n//  callbacks,\n//  pages: {\n//    error: '/login' // Changing the error redirect page to our custom login page\n//  }\n//}\n//\n//export default (req, res) => NextAuth(req, res, options)","map":{"version":3,"sources":["C:/Users/Admin/Desktop/decebells from scratch/frontend/pages/api/[...nextauth].js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import NextAuth from 'next-auth'\r\n//import Providers from 'next-auth/providers'\r\n//import axios from 'axios'\r\n//\r\n//const providers = [\r\n//  Providers.Credentials({\r\n//    name: 'Credentials',\r\n//    authorize: async (credentials) => {\r\n//      try {\r\n//        const user = await axios.post('http://localhost:3000/api/v1/users/login',\r\n//        {\r\n//          user: {\r\n//            password: credentials.password,\r\n//            email: credentials.email\r\n//          }\r\n//        },\r\n//        {\r\n//          headers: {\r\n//            accept: '*/*',\r\n//            'Content-Type': 'application/json'\r\n//          }\r\n//        })\r\n//\r\n//        if (user) {\r\n//          return {status: 'success', data: user}\r\n//        } \r\n//      } catch (e) {\r\n//        const errorMessage = e.response.data.message\r\n//        // Redirecting to the login page with error messsage          in the URL\r\n//        throw new Error(errorMessage + '&email=' + credentials.email)\r\n//      }\r\n//\r\n//    }\r\n//  })\r\n//]\r\n//\r\n//const callbacks = {\r\n//  async signIn(user, account, profile) {\r\n//    return true\r\n//  },\r\n//\r\n//  async jwt(token, user) {\r\n//    if (user) {\r\n//      token.accessToken = user.data.token\r\n//    }\r\n//\r\n//    return token\r\n//  },\r\n//\r\n//  async session(session, token) {\r\n//    session.accessToken = token.accessToken\r\n//    return session\r\n//  }\r\n//}\r\n//\r\n//const options = {\r\n//  providers,\r\n//  callbacks,\r\n//  pages: {\r\n//    error: '/login' // Changing the error redirect page to our custom login page\r\n//  }\r\n//}\r\n//\r\n//export default (req, res) => NextAuth(req, res, options)"]},"metadata":{},"sourceType":"script"}