{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\decebells from scratch\\\\frontend\\\\pages\\\\shop\\\\product\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from 'react-query';\n\nvar fetchProduct = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"http://localhost:3000/api/v1/products/\".concat(id));\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function fetchProduct(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction Product(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(),\n      qty = _useState[0],\n      setQty = _useState[1];\n\n  var addToCartHandler = function addToCartHandler() {\n    return;\n  };\n\n  var handleInputQty = function handleInputQty(e) {\n    setQty(e.target.value);\n    console.log(qty);\n  };\n\n  var id = router.query.id;\n\n  var _useQuery = useQuery('productDetail', function () {\n    return fetchProduct(id);\n  }, {\n    initialData: props.product\n  }),\n      data = _useQuery.data,\n      status = _useQuery.status;\n\n  if (status === 'success') {\n    var productDetail = data.data.product;\n  }\n\n  if (productDetail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'black',\n          width: '500px'\n        },\n        children: productDetail.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        className: \"main__image\",\n        width: 500,\n        height: 500,\n        src: \"/images/\".concat(productDetail.sku, \"-main image.jpg\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qty\",\n          children: \"Qty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"qty\",\n          onChange: handleInputQty,\n          value: qty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToCartHandler,\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  } //  }\n  //}\n\n}\n\n_s(Product, \"6JB0SEBcAIWDMOlxzJFtTVFdKG0=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Product;\nexport var __N_SSP = true;\nexport default Product; //\n\n/*\r\n<h1 style={{color:'black', width: '500px'}}>{product.title}</h1>\r\n<Image className='main__image' width={500} height={500} src={`/images/${product.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label for='qty'>Qty</label>\r\n            <input type='number' name='qty' onChange={handleInputQty} value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/decebells from scratch/frontend/pages/shop/product/[id].js"],"names":["Image","axios","useState","useContext","useEffect","useRouter","useQuery","fetchProduct","id","get","data","console","log","response","message","Product","props","router","qty","setQty","addToCartHandler","handleInputQty","e","target","value","query","initialData","product","status","productDetail","color","width","title","sku"],"mappings":"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","sourcesContent":["import Image from 'next/image';\r\nimport axios from 'axios';\r\nimport {useState, useContext, useEffect} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {useQuery} from 'react-query';\r\n\r\n\r\n\r\nconst fetchProduct = async (id) => {\r\n  \r\n  try {\r\n    //console.log(JSON.parse(JSON.stringify(id)))\r\n    //const id = '600d3ac6fae8a4011feb0528';\r\n    //console.log(id)\r\n    const {data} = await axios.get(`http://localhost:3000/api/v1/products/${id}`);\r\n    //console.log(data)\r\n    return data;\r\n\r\n  } catch (error) {console.log(error.response.data.message)}                          // Everytime we go to the product detail page, we are getting an error from the 'server' in the terminal console saying \r\n                                                                                      // 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  console.log(context.params.id)\r\n  // Call an external API endpoint to get posts\r\n\r\n    //console.log(JSON.parse(JSON.stringify(id)))\r\n    //const id = '600d3ac6fae8a4011feb0528';\r\n\r\n    \r\n\r\n  \r\n  const product = await fetchProduct(context.params.id)       // Previously I was calling 'fetchProduct' function in this 'getServerSideProps' without passing the 'id' to it which was giving some kind of\r\n                                                              // serializing error saying `undefined` cannot be serialized as JSON'. The reason was that 'getServerSideProps' must return a valid json object\r\n                                                              // but because we were not passing the id to the fetchProduct therefore we were not returning a valid json object. Now we call solve this problem \r\n                                                              // by specifically saying something like props: {product: product || null} or using the spread operator on the 'product' that is saving the\r\n                                                              // response coming from the 'fetchProduct' function. However we were still getting the error in our console from the 'catch' block of our \r\n                                                              // 'fetchProduct' function and this was 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'.\r\n                                                              \r\n                                                              // In short we needed to pass the 'id' of the product to fetchProduct when we were calling it in the 'getServerSideProps' function. It turns out\r\n                                                              // that 'getServerSideProps' also gets access to something called 'context' and it contains many useful data including the 'params' which contains\r\n                                                              // the url parameters. So used to to get the 'id' param and passed that to the 'fetchProduct' function.\r\n  \r\n  // By returning { props: { posts } }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: \r\n      product,\r\n    \r\n  }\r\n}\r\n\r\nfunction Product(props) {\r\n  const router = useRouter();\r\n\r\n  const [qty, setQty] = useState()\r\n\r\n  const addToCartHandler = function () {\r\n    return\r\n  }\r\n\r\n  const handleInputQty = function (e) {\r\n    setQty(e.target.value)\r\n    console.log(qty)\r\n  }\r\n\r\n\r\n  const {id} = router.query;\r\n  const {data , status} = useQuery('productDetail', () => fetchProduct(id), {initialData: props.product});\r\n\r\n  if (status === 'success') {\r\n\r\n    var productDetail = data.data.product\r\n  }\r\n\r\n  if (productDetail) {\r\n\r\n    return(\r\n      <div >\r\n        <h1 style={{color:'black', width: '500px'}}>{productDetail.title}</h1>\r\n        <Image className='main__image' width={500} height={500} src={`/images/${productDetail.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label htmlFor='qty'>Qty</label>\r\n            <input type='number' name='qty' onChange={handleInputQty} value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>\r\n        \r\n      </div>\r\n    )\r\n  } else {return null}\r\n  //  }\r\n  //}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Product;\r\n//\r\n      \r\n/*\r\n<h1 style={{color:'black', width: '500px'}}>{product.title}</h1>\r\n<Image className='main__image' width={500} height={500} src={`/images/${product.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label for='qty'>Qty</label>\r\n            <input type='number' name='qty' onChange={handleInputQty} value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>*/"]},"metadata":{},"sourceType":"module"}