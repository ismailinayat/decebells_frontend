{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/Mohammad Ismail/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Mohammad Ismail/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Mohammad Ismail/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mohammad Ismail\\\\Desktop\\\\decebells from scratch\\\\frontend\\\\pages\\\\shop\\\\product\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { CartContext } from '../../../contexts/CartContext';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport { useQuery } from 'react-query';\nimport DetailCarousel from '../../../components/detailCaraousel';\n\nvar fetchProduct = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"http://localhost:5000/api/v1/products/\".concat(id));\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function fetchProduct(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction Product(props) {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useContext = useContext(CartContext),\n      cartItems = _useContext.cartItems,\n      setCartItems = _useContext.setCartItems;\n\n  var _useState = useState('1'),\n      qty = _useState[0],\n      setQty = _useState[1];\n\n  function handleQtyChange(e) {\n    setQty(e.target.value);\n  }\n\n  var addToCartHandler = function addToCartHandler() {\n    var newCartItem = {\n      id: id,\n      image: productDetail.image,\n      name: productDetail.title,\n      price: productDetail.price,\n      quantity: qty\n    };\n    var itemExists = cartItems.find(function (item) {\n      return item.id === id;\n    });\n\n    if (itemExists) {\n      setCartItems(cartItems.map(function (item) {\n        return item.id === itemExists.id ? newCartItem : item;\n      }));\n      localStorage.setItem('cart', JSON.stringify(cartItems));\n      toast.success('Product quanity has been updated');\n    } else {\n      setCartItems([].concat(_toConsumableArray(cartItems), [newCartItem]));\n      localStorage.setItem('cart', JSON.stringify(cartItems));\n      toast.success('Product has been added to the cart');\n    }\n  };\n\n  useEffect(function () {\n    var cartDataFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\n\n    if (cartDataFromLocalStorage) {\n      setCartItems(cartDataFromLocalStorage);\n    }\n  }, []);\n  useEffect(function () {\n    //console.log(`LocalStorage: ${localStorage.getItem('cart')}`)\n    //console.log(`context: ${cartItems}`)\n    localStorage.setItem('cart', JSON.stringify(cartItems));\n  });\n\n  var handleInputQty = function handleInputQty(e) {\n    setQty(function () {\n      return e.target.value;\n    });\n  };\n\n  var _useQuery = useQuery('productDetail', function () {\n    return fetchProduct(id);\n  }, {\n    initialData: props.product\n  }),\n      data = _useQuery.data,\n      status = _useQuery.status;\n\n  if (status === 'success') {\n    var productDetail = data.data.product;\n  }\n\n  if (productDetail) {\n    //console.log(productDetail)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail__screen\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail__header--left\",\n          children: /*#__PURE__*/_jsxDEV(DetailCarousel, {\n            images: productDetail.images,\n            sku: productDetail.sku\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail__header--right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'black'\n            },\n            children: productDetail.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"quantity\",\n            style: {\n              color: 'black'\n            },\n            children: \"Quantity: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            value: qty,\n            onChange: handleQtyChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addToCartHandler,\n              children: \"Add To Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(Product, \"Qd7Qa5jdfWuWirhI90XOlfXM84Q=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Product;\nexport var __N_SSP = true;\nexport default Product;\n/*\r\n<Image className='main__image' width={500} height={500} src={`/images/${productDetail.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label style={{color: 'black'}} htmlFor='qty'>Qty</label>\r\n            <input type='number' onChange={handleInputQty} name='qty' value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>\r\n          */\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Users/Mohammad Ismail/Desktop/decebells from scratch/frontend/pages/shop/product/[id].js"],"names":["Image","axios","useState","useContext","useEffect","CartContext","toast","ToastContainer","useRouter","useQuery","DetailCarousel","fetchProduct","id","get","data","console","log","response","message","Product","props","router","query","cartItems","setCartItems","qty","setQty","handleQtyChange","e","target","value","addToCartHandler","newCartItem","image","productDetail","name","title","price","quantity","itemExists","find","item","map","localStorage","setItem","JSON","stringify","success","cartDataFromLocalStorage","getItem","parse","handleInputQty","initialData","product","status","images","sku","color"],"mappings":"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","sourcesContent":["import Image from 'next/image';\r\nimport axios from 'axios';\r\nimport {useState, useContext, useEffect} from 'react';\r\nimport {CartContext} from '../../../contexts/CartContext'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport {useRouter} from 'next/router';\r\nimport {useQuery} from 'react-query';\r\n\r\nimport DetailCarousel from '../../../components/detailCaraousel';\r\n\r\n\r\n\r\nconst fetchProduct = async (id) => {\r\n  \r\n  try {\r\n    //console.log(JSON.parse(JSON.stringify(id)))\r\n    //const id = '600d3ac6fae8a4011feb0528';\r\n    //console.log(id)\r\n    const {data} = await axios.get(`http://localhost:5000/api/v1/products/${id}`);\r\n    //console.log(data)\r\n    return data;\r\n\r\n  } catch (error) {console.log(error.response.data.message)}                          // Everytime we go to the product detail page, we are getting an error from the 'server' in the terminal console saying \r\n                                                                                      // 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n\r\n  // Call an external API endpoint to get posts\r\n\r\n\r\n\r\n  \r\n  const product = await fetchProduct(context.params.id)       // Previously I was calling 'fetchProduct' function in this 'getServerSideProps' without passing the 'id' to it which was giving some kind of\r\n                                                              // serializing error saying `undefined` cannot be serialized as JSON'. The reason was that 'getServerSideProps' must return a valid json object\r\n                                                              // but because we were not passing the id to the fetchProduct therefore we were not returning a valid json object. Now we call solve this problem \r\n                                                              // by specifically saying something like props: {product: product || null} or using the spread operator on the 'product' that is saving the\r\n                                                              // response coming from the 'fetchProduct' function. However we were still getting the error in our console from the 'catch' block of our \r\n                                                              // 'fetchProduct' function and this was 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'.\r\n                                                              \r\n                                                              // In short we needed to pass the 'id' of the product to fetchProduct when we were calling it in the 'getServerSideProps' function. It turns out\r\n                                                              // that 'getServerSideProps' also gets access to something called 'context' and it contains many useful data including the 'params' which contains\r\n                                                              // the url parameters. So used to to get the 'id' param and passed that to the 'fetchProduct' function.\r\n  \r\n  // By returning { props: { posts } }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: \r\n      product,\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nfunction Product(props) {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  \r\n\r\n  const {cartItems, setCartItems} = useContext(CartContext)\r\n  \r\n  const [qty, setQty] = useState('1')\r\n\r\n  function handleQtyChange(e) {\r\n    setQty(e.target.value)\r\n  }\r\n\r\n  const addToCartHandler = function () {\r\n\r\n    const newCartItem = {\r\n      id: id,\r\n      image: productDetail.image,\r\n      name: productDetail.title,\r\n      price: productDetail.price,\r\n      quantity: qty\r\n    }\r\n\r\n    const itemExists = cartItems.find(item => item.id === id)\r\n\r\n    if (itemExists) {\r\n      \r\n      setCartItems(cartItems.map(item => item.id === itemExists.id ? newCartItem : item))\r\n      \r\n      localStorage.setItem('cart', JSON.stringify(cartItems))\r\n\r\n      toast.success('Product quanity has been updated')\r\n      \r\n    }  else {\r\n      \r\n      setCartItems([...cartItems, newCartItem])\r\n       \r\n      localStorage.setItem('cart', JSON.stringify(cartItems))\r\n\r\n      toast.success('Product has been added to the cart')\r\n     \r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const cartDataFromLocalStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')): [];\r\n    if (cartDataFromLocalStorage) {\r\n      setCartItems(cartDataFromLocalStorage)\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    //console.log(`LocalStorage: ${localStorage.getItem('cart')}`)\r\n    //console.log(`context: ${cartItems}`)\r\n    localStorage.setItem('cart', JSON.stringify(cartItems))\r\n  })\r\n\r\n  const handleInputQty = function (e) {\r\n    setQty(() => e.target.value)\r\n  }\r\n\r\n\r\n  \r\n  const {data , status} = useQuery('productDetail', () => fetchProduct(id), {initialData: props.product});\r\n\r\n  if (status === 'success') {\r\n\r\n    var productDetail = data.data.product\r\n  }\r\n\r\n  if (productDetail) {\r\n    //console.log(productDetail)\r\n\r\n    return(\r\n      <div className='detail__screen'>\r\n\r\n      <>\r\n      <ToastContainer>\r\n\r\n      </ToastContainer>\r\n      </>\r\n        <div className=\"detail__header\">\r\n          <div className=\"detail__header--left\">\r\n            <DetailCarousel images={productDetail.images} sku={productDetail.sku}/>\r\n          </div>\r\n\r\n          <div className=\"detail__header--right\">\r\n            <h1 style={{color:'black'}}>{productDetail.title}</h1>\r\n\r\n            <label htmlFor=\"quantity\" style={{color: 'black'}}>Quantity: </label>\r\n            <input type=\"number\" name='quantity' value={qty} onChange={handleQtyChange}/>\r\n            <div>\r\n\r\n            <button onClick={addToCartHandler}>Add To Cart</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n      </div>\r\n    )\r\n  } else {return null}\r\n\r\n}\r\n\r\n\r\n\r\nexport default Product;\r\n/*\r\n<Image className='main__image' width={500} height={500} src={`/images/${productDetail.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label style={{color: 'black'}} htmlFor='qty'>Qty</label>\r\n            <input type='number' onChange={handleInputQty} name='qty' value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>\r\n          */"]},"metadata":{},"sourceType":"module"}