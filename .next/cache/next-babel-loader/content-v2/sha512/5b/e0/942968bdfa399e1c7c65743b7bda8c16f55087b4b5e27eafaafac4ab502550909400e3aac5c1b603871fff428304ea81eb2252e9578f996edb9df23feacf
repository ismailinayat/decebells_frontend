{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Admin/Desktop/decebells from scratch/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\decebells from scratch\\\\frontend\\\\pages\\\\shop\\\\product\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport axios from 'axios';\nimport { useState, useContext, useEffect } from 'react';\nimport { CartContext } from '../../../contexts/CartContext';\nimport { useRouter } from 'next/router';\nimport { useQuery } from 'react-query';\n\nvar fetchProduct = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"http://localhost:3000/api/v1/products/\".concat(id));\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function fetchProduct(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction Product(props) {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useContext = useContext(CartContext),\n      cartItems = _useContext.cartItems,\n      setCartItems = _useContext.setCartItems;\n\n  var _useState = useState('1'),\n      qty = _useState[0],\n      setQty = _useState[1];\n\n  var addToCartHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var newCartItem, itemExists;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newCartItem = _defineProperty({\n                id: id,\n                name: productDetail.title,\n                image: productDetail.price,\n                qty: qty\n              }, \"qty\", qty);\n              itemExists = cartItems.find(function (item) {\n                return item.id === id;\n              });\n\n              if (!itemExists) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 5;\n              return setCartItems(cartItems.map(function (item) {\n                return item.id === itemExists.id ? newCartItem : item;\n              }));\n\n            case 5:\n              localStorage.setItem('cart', JSON.stringify(cartItems));\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.next = 10;\n              return setCartItems([].concat(_toConsumableArray(cartItems), [newCartItem]));\n\n            case 10:\n              localStorage.setItem('cart', JSON.stringify(cartItems));\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function addToCartHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /*\r\n    useEffect(() => {\r\n  \r\n      localStorage.setItem('cart', JSON.stringify(cartItems))\r\n    }, [cartItems])\r\n  */\n\n\n  var handleInputQty = function handleInputQty(e) {\n    setQty(function () {\n      return e.target.value;\n    });\n  };\n\n  var _useQuery = useQuery('productDetail', function () {\n    return fetchProduct(id);\n  }, {\n    initialData: props.product\n  }),\n      data = _useQuery.data,\n      status = _useQuery.status;\n\n  if (status === 'success') {\n    var productDetail = data.data.product;\n  }\n\n  if (productDetail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'black',\n          width: '500px'\n        },\n        children: productDetail.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        className: \"main__image\",\n        width: 500,\n        height: 500,\n        src: \"/images/\".concat(productDetail.sku, \"-main image.jpg\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: 'black'\n          },\n          htmlFor: \"qty\",\n          children: \"Qty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: handleInputQty,\n          name: \"qty\",\n          value: qty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToCartHandler,\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  } //  }\n  //}\n\n}\n\n_s(Product, \"MbtoyaOZe6SPdpNgCQo4eJANuPA=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Product;\nexport var __N_SSP = true;\nexport default Product; //\n\n/*\r\n<h1 style={{color:'black', width: '500px'}}>{product.title}</h1>\r\n<Image className='main__image' width={500} height={500} src={`/images/${product.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label for='qty'>Qty</label>\r\n            <input type='number' name='qty' onChange={handleInputQty} value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/decebells from scratch/frontend/pages/shop/product/[id].js"],"names":["Image","axios","useState","useContext","useEffect","CartContext","useRouter","useQuery","fetchProduct","id","get","data","console","log","response","message","Product","props","router","query","cartItems","setCartItems","qty","setQty","addToCartHandler","newCartItem","name","productDetail","title","image","price","itemExists","find","item","map","localStorage","setItem","JSON","stringify","handleInputQty","e","target","value","initialData","product","status","color","width","sku"],"mappings":"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","sourcesContent":["import Image from 'next/image';\r\nimport axios from 'axios';\r\nimport {useState, useContext, useEffect} from 'react';\r\nimport {CartContext} from '../../../contexts/CartContext'\r\nimport {useRouter} from 'next/router';\r\nimport {useQuery} from 'react-query';\r\n\r\n\r\n\r\nconst fetchProduct = async (id) => {\r\n  \r\n  try {\r\n    //console.log(JSON.parse(JSON.stringify(id)))\r\n    //const id = '600d3ac6fae8a4011feb0528';\r\n    //console.log(id)\r\n    const {data} = await axios.get(`http://localhost:3000/api/v1/products/${id}`);\r\n    //console.log(data)\r\n    return data;\r\n\r\n  } catch (error) {console.log(error.response.data.message)}                          // Everytime we go to the product detail page, we are getting an error from the 'server' in the terminal console saying \r\n                                                                                      // 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  console.log(context.params.id)\r\n  // Call an external API endpoint to get posts\r\n\r\n    //console.log(JSON.parse(JSON.stringify(id)))\r\n    //const id = '600d3ac6fae8a4011feb0528';\r\n\r\n    \r\n\r\n  \r\n  const product = await fetchProduct(context.params.id)       // Previously I was calling 'fetchProduct' function in this 'getServerSideProps' without passing the 'id' to it which was giving some kind of\r\n                                                              // serializing error saying `undefined` cannot be serialized as JSON'. The reason was that 'getServerSideProps' must return a valid json object\r\n                                                              // but because we were not passing the id to the fetchProduct therefore we were not returning a valid json object. Now we call solve this problem \r\n                                                              // by specifically saying something like props: {product: product || null} or using the spread operator on the 'product' that is saving the\r\n                                                              // response coming from the 'fetchProduct' function. However we were still getting the error in our console from the 'catch' block of our \r\n                                                              // 'fetchProduct' function and this was 'Cast to ObjectId failed for value 'undefined' at path \"_id\" for model \"product\"'.\r\n                                                              \r\n                                                              // In short we needed to pass the 'id' of the product to fetchProduct when we were calling it in the 'getServerSideProps' function. It turns out\r\n                                                              // that 'getServerSideProps' also gets access to something called 'context' and it contains many useful data including the 'params' which contains\r\n                                                              // the url parameters. So used to to get the 'id' param and passed that to the 'fetchProduct' function.\r\n  \r\n  // By returning { props: { posts } }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: \r\n      product,\r\n    \r\n  }\r\n}\r\n\r\nfunction Product(props) {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  \r\n\r\n  const {cartItems, setCartItems} = useContext(CartContext)\r\n\r\n  const [qty, setQty] = useState('1')\r\n\r\n  const addToCartHandler = async function () {\r\n\r\n    const newCartItem = {\r\n      id: id,\r\n      name: productDetail.title,\r\n      image: productDetail.price,\r\n      qty, qty\r\n    }\r\n\r\n    const itemExists = cartItems.find(item => item.id === id)\r\n\r\n    if (itemExists) {\r\n      await setCartItems(cartItems.map(item => item.id === itemExists.id ? newCartItem : item))\r\n      localStorage.setItem('cart', JSON.stringify(cartItems))\r\n      \r\n    }  else {\r\n      await setCartItems([...cartItems, newCartItem])\r\n      localStorage.setItem('cart', JSON.stringify(cartItems))\r\n     \r\n    }\r\n\r\n  }\r\n/*\r\n  useEffect(() => {\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cartItems))\r\n  }, [cartItems])\r\n*/\r\n  const handleInputQty = function (e) {\r\n    setQty(() => e.target.value)\r\n  }\r\n\r\n\r\n  \r\n  const {data , status} = useQuery('productDetail', () => fetchProduct(id), {initialData: props.product});\r\n\r\n  if (status === 'success') {\r\n\r\n    var productDetail = data.data.product\r\n  }\r\n\r\n  if (productDetail) {\r\n\r\n    return(\r\n      <div >\r\n        <h1 style={{color:'black', width: '500px'}}>{productDetail.title}</h1>\r\n        <Image className='main__image' width={500} height={500} src={`/images/${productDetail.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label style={{color: 'black'}} htmlFor='qty'>Qty</label>\r\n            <input type='number' onChange={handleInputQty} name='qty' value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>\r\n        \r\n      </div>\r\n    )\r\n  } else {return null}\r\n  //  }\r\n  //}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Product;\r\n//\r\n      \r\n/*\r\n<h1 style={{color:'black', width: '500px'}}>{product.title}</h1>\r\n<Image className='main__image' width={500} height={500} src={`/images/${product.sku}-main image.jpg`}></Image>\r\n          <form>\r\n            <label for='qty'>Qty</label>\r\n            <input type='number' name='qty' onChange={handleInputQty} value={qty}></input>\r\n          </form>\r\n          <button onClick={addToCartHandler}>Add To Cart</button>*/"]},"metadata":{},"sourceType":"module"}