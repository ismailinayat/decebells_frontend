{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\decebells from scratch\\\\frontend\\\\pages\\\\login.js\";\nimport useInputState from '../hooks/useInputState.js';\nimport { HiOutlineUser } from 'react-icons/hi';\nimport { AiTwotoneUnlock } from 'react-icons/Ai';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\nimport { useState } from 'react';\n\nfunction LoginForm() {\n  const [email, updateEmail] = useInputState('');\n  const [password, updatePassword] = useInputState('');\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState(''); //console.log(user);\n\n  const login = async e => {\n    try {\n      const res = await axios.post('http://localhost:3000/api/v1/users/login', {\n        email: e.target.email.value,\n        password: e.target.password.value\n      });\n      return res.data.data;\n    } catch (err) {\n      return setLoginError(err.response.data);\n    }\n\n    ;\n  };\n\n  const mutation = useMutation(e => {\n    return login(e);\n  }); //fetchProducts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    toast('hello');\n    mutation.mutate(e);\n  };\n\n  const notify = () => {\n    toast('A button was clicked');\n  };\n\n  console.log(loginError);\n  console.log(mutation);\n\n  if (loginError) {\n    console.log(loginError);\n    toast.error(loginError.message); //return <h1 style={{color: 'red'}}>{loginError.message}</h1>\n  }\n\n  if (!loginError && mutation.data) {\n    toast.success('Successfully logged In');\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'black'\n      },\n      children: [\"Welcome \", mutation.data.user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form__title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__input-container\",\n          children: [/*#__PURE__*/_jsxDEV(HiOutlineUser, {\n            className: \"form__icon\",\n            size: \"1.5rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form__input\",\n            name: \"email\",\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter your email\",\n            onChange: updateEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form__label\",\n            htmlFor: \"email\",\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__input-container\",\n          children: [/*#__PURE__*/_jsxDEV(AiTwotoneUnlock, {\n            className: \"form__icon\",\n            size: \"1.5rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form__input\",\n            name: \"password\",\n            type: \"password\",\n            value: password,\n            placeholder: \"Enter your password\",\n            onChange: updatePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form__label\",\n            htmlFor: \"password\",\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          className: \"form__button\",\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: notify,\n      children: \"toast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/decebells from scratch/frontend/pages/login.js"],"names":["useInputState","HiOutlineUser","AiTwotoneUnlock","toast","axios","useMutation","useState","LoginForm","email","updateEmail","password","updatePassword","loginError","setLoginError","login","e","res","post","target","value","data","err","response","mutation","handleSubmit","preventDefault","mutate","notify","console","log","error","message","success","color","user","name"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AACA,SAAQC,aAAR,QAA4B,gBAA5B;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,SAASC,SAAT,GAAsB;AAGpB,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBT,aAAa,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,cAAX,IAA6BX,aAAa,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACY,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,EAAD,CAA5C,CALoB,CAOpB;;AACA,QAAMQ,KAAK,GAAG,MAAOC,CAAP,IAAa;AACzB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,0CAAX,EACpB;AAACT,QAAAA,KAAK,EAAEO,CAAC,CAACG,MAAF,CAASV,KAAT,CAAeW,KAAvB;AAA8BT,QAAAA,QAAQ,EAAEK,CAAC,CAACG,MAAF,CAASR,QAAT,CAAkBS;AAA1D,OADoB,CAAlB;AAEF,aAAOH,GAAG,CAACI,IAAJ,CAASA,IAAhB;AACC,KAJD,CAIE,OAAMC,GAAN,EAAW;AAAC,aAAOR,aAAa,CAACQ,GAAG,CAACC,QAAJ,CAAaF,IAAd,CAApB;AAAwC;;AAAA;AAGvD,GARD;;AASA,QAAMG,QAAQ,GAAGlB,WAAW,CAACU,CAAC,IAAI;AAChC,WAAOD,KAAK,CAACC,CAAD,CAAZ;AACD,GAF2B,CAA5B,CAjBoB,CAoBpB;;AAEA,QAAMS,YAAY,GAAIT,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACU,cAAF;AACAtB,IAAAA,KAAK,CAAC,OAAD,CAAL;AACAoB,IAAAA,QAAQ,CAACG,MAAT,CAAgBX,CAAhB;AACD,GAJD;;AAMA,QAAMY,MAAM,GAAG,MAAM;AACnBxB,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,GAFD;;AAIAyB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AAGAgB,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,MAAGX,UAAH,EAAe;AACbgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACAT,IAAAA,KAAK,CAAC2B,KAAN,CAAYlB,UAAU,CAACmB,OAAvB,EAFa,CAGb;AACD;;AACD,MAAI,CAACnB,UAAD,IAAeW,QAAQ,CAACH,IAA5B,EAAkC;AAChCjB,IAAAA,KAAK,CAAC6B,OAAN,CAAc,wBAAd;AACA,wBAAO;AAAI,MAAA,KAAK,EAAG;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA,6BAAuCV,QAAQ,CAACH,IAAT,CAAcc,IAAd,CAAmBC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEX,YAAjC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC,YAAzB;AAAsC,YAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,IAAI,EAAC,OAApC;AAA4C,YAAA,IAAI,EAAC,OAAjD;AAAyD,YAAA,KAAK,EAAEhB,KAAhE;AAAuE,YAAA,WAAW,EAAC,kBAAnF;AAAsG,YAAA,QAAQ,EAAEC;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,OAAO,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,YAA3B;AAAwC,YAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,IAAI,EAAC,UAApC;AAA+C,YAAA,IAAI,EAAC,UAApD;AAA+D,YAAA,KAAK,EAAEC,QAAtE;AAAgF,YAAA,WAAW,EAAC,qBAA5F;AAAkH,YAAA,QAAQ,EAAEC;AAA5H;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAmBE;AAAQ,MAAA,OAAO,EAAEgB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;AAED,eAAepB,SAAf","sourcesContent":["import useInputState from '../hooks/useInputState.js';\r\nimport {HiOutlineUser} from 'react-icons/hi';\r\nimport {AiTwotoneUnlock} from 'react-icons/Ai';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport {useMutation} from 'react-query';\r\nimport {useState} from 'react';\r\n\r\n\r\nfunction LoginForm () {\r\n  \r\n  \r\n  const [email, updateEmail] = useInputState('');\r\n  const [password, updatePassword] = useInputState('');\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n  //console.log(user);\r\n  const login = async (e) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:3000/api/v1/users/login', \r\n    {email: e.target.email.value, password: e.target.password.value})\r\n    return res.data.data\r\n    } catch(err) {return setLoginError(err.response.data)};\r\n    \r\n\r\n  }\r\n  const mutation = useMutation(e => {\r\n    return login(e);\r\n  })\r\n  //fetchProducts();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    toast('hello')\r\n    mutation.mutate(e)\r\n  }\r\n\r\n  const notify = () => {\r\n    toast('A button was clicked')\r\n  }\r\n\r\n  console.log(loginError);\r\n\r\n\r\n  console.log(mutation)\r\n\r\n  if(loginError) {\r\n    console.log(loginError)\r\n    toast.error(loginError.message)\r\n    //return <h1 style={{color: 'red'}}>{loginError.message}</h1>\r\n  }\r\n  if (!loginError && mutation.data) {\r\n    toast.success('Successfully logged In')\r\n    return <h1 style= {{color: 'black'}}>Welcome {mutation.data.user.name}</h1>\r\n  }\r\n  return(\r\n    <div className='form__screen'>\r\n      \r\n      <div className='form__container'>\r\n        <h2 className='form__title'>Login</h2>\r\n        <form className='form' onSubmit={handleSubmit}>\r\n          <div className='form__input-container'>\r\n            <HiOutlineUser className='form__icon' size='1.5rem'/>\r\n            <input className='form__input' name='email' type=\"email\" value={email} placeholder='Enter your email' onChange={updateEmail}/>\r\n            <label className='form__label' htmlFor=\"email\">email</label>\r\n          </div>\r\n          <div className='form__input-container'>\r\n            <AiTwotoneUnlock className='form__icon' size='1.5rem'/>\r\n            <input className='form__input' name='password' type=\"password\" value={password} placeholder='Enter your password' onChange={updatePassword}/>\r\n            <label className='form__label' htmlFor=\"password\">password</label>\r\n          </div>\r\n          <button type='Submit' className='form__button'> Login </button>\r\n        </form>\r\n      </div>\r\n\r\n      <button onClick={notify}>toast</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}